components:
  schemas:
    AnonStruct1:
      properties:
        Active:
          type: boolean
        Avatar:
          $ref: '#/components/schemas/multipart.FileHeader'
        Name:
          type: string
        Timestamp:
          type: string
      type: object
    dto.Form:
      properties:
        Age:
          type: integer
        File:
          $ref: '#/components/schemas/multipart.FileHeader'
        Name:
          type: string
        Timestamp:
          format: date-time
          type: string
      type: object
    dto.FormUploadResp:
      properties:
        active:
          type: boolean
        filename:
          type: string
        name:
          type: string
        timestamp:
          format: date-time
          type: string
        token:
          type: string
      type: object
    dto.User:
      properties:
        age:
          type: integer
        id:
          format: uuid
          type: string
        name:
          type: string
        status:
          enum:
            - active
            - inactive
          type: string
      type: object
    multipart.FileHeader:
      format: binary
      nullable: true
      type: string
info:
  title: Example api
  version: 0.0.1
openapi: 3.0.0
paths:
  /api/v1/blobs/blob:
    get:
      operationId: getBlob
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                type: string
          description: OK
        default:
          description: ""
      tags:
        - Blobs
  /api/v1/blobs/stream:
    get:
      operationId: getStream
      responses:
        "200":
          content:
            text/plain: {}
          description: OK
        default:
          description: ""
      tags:
        - Blobs
  /api/v1/blobs/string:
    get:
      operationId: getString
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        default:
          description: ""
      tags:
        - Blobs
  /api/v1/forms/inline:
    post:
      operationId: inlineForm
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnonStruct1'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.FormUploadResp'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                type: string
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                additionalProperties: {}
                type: object
          description: Internal Server Error
        default:
          description: ""
      tags:
        - Forms
  /api/v1/forms/struct:
    post:
      operationId: structForm
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/dto.Form'
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: {}
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                additionalProperties: {}
                type: object
          description: Bad Request
        default:
          description: ""
      tags:
        - Forms
  /api/v1/json/{id}:
    get:
      operationId: getUserJSON
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.User'
          description: OK
        default:
          description: ""
      tags:
        - Json
  /api/v1/json/blob:
    get:
      operationId: getUserJSONBlob
      responses:
        "200":
          content:
            application/json: {}
          description: OK
        default:
          description: ""
      tags:
        - Json
  /api/v1/json/pretty:
    get:
      operationId: getUserJSONPretty
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.User'
          description: OK
        default:
          description: ""
      tags:
        - Json
  /api/v1/nocontent/redirect:
    get:
      operationId: redirectSomewhere
      responses:
        "302":
          description: Found
        default:
          description: ""
      tags:
        - Nocontent
  /api/v1/nocontent/resource/{id}:
    delete:
      operationId: deleteResource
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        default:
          description: ""
      tags:
        - Nocontent
  /api/v1/xml/:
    get:
      operationId: getUserXML
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/dto.User'
          description: OK
        default:
          description: ""
      tags:
        - Xml
  /api/v1/xml/blob:
    get:
      operationId: getUserXMLBlob
      responses:
        "200":
          content:
            application/xml: {}
          description: OK
        default:
          description: ""
      tags:
        - Xml
  /api/v1/xml/pretty:
    get:
      operationId: getUserXMLPretty
      responses:
        "200":
          content:
            application/xml: {}
          description: OK
        default:
          description: ""
      tags:
        - Xml
servers:
  - url: http://localhost:8080
