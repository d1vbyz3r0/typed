components:
  schemas:
    dto.Error:
      properties:
        message:
          type: string
      type: object
    dto.User:
      properties:
        email:
          type: string
        id:
          type: integer
        name:
          type: string
        role:
          enum:
            - user
            - admin
          type: string
      type: object
    dto.UsersFilter:
      properties:
        Limit:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        Offset:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        Search:
          nullable: true
          type: string
        Sort:
          enum:
            - asc
            - desc
          type: string
      type: object
info:
  title: Example api
  version: 0.0.1
openapi: 3.0.0
paths:
  /api/v1/users/:
    get:
      operationId: GetUsers
      parameters:
        - in: query
          name: search
          schema:
            nullable: true
            type: string
        - in: query
          name: limit
          required: true
          schema:
            type: integer
        - in: query
          name: offset
          required: true
          schema:
            type: integer
        - in: query
          name: sort
          required: true
          schema:
            enum:
              - asc
              - desc
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.User'
                type: array
          description: dto.User
        "400":
          content:
            application/json: {}
          description: dto.Error
        "500":
          content:
            application/json: {}
          description: dto.Error
        default:
          description: ""
      tags:
        - Users
    post:
      operationId: CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.User'
      responses:
        "200":
          content:
            application/json: {}
          description: dto.User
        "400":
          content:
            application/json: {}
          description: dto.Error
        "500":
          content:
            application/json: {}
          description: dto.Error
        default:
          description: ""
      tags:
        - Users
  /api/v1/users/{userId}:
    get:
      operationId: GetUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json: {}
          description: dto.User
        "400":
          content:
            application/json: {}
          description: dto.Error
        "500":
          content:
            application/json: {}
          description: dto.Error
        default:
          description: ""
      tags:
        - Users
  /api/v1/users/map:
    get:
      operationId: ReturningMap
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/dto.User'
                  type: array
                type: object
          description: map[string][]github.com/d1vbyz3r0/typed/examples/api/dto.User
        default:
          description: ""
      tags:
        - Users
servers:
  - url: http://localhost:8080
